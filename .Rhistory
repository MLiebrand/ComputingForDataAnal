q()
mean(abs(rnorm(100)))
mean(abs(rnorm(100)))
rnorm(10)
x <- c(1,2,4)
q<-c(x,x,8)
x
x[3]
mean(x)
data()
mean(Nile)
help(package-MASS)
help(package=MASS)
?files
?Dates
?classes
?CLasses
??Classes
data
data <-read.csv("CourseraR/001.csv")
data <-read.csv("CourseraR\001.csv")
?read.csv
getwd()
setwd("~/Documents/CourseraR")
getwd()
data <-read.csv("CourseraR/001.csv")
getwd()
data <-read.csv("/CourseraR/001.csv")
data <-read.csv("/specdata/001.csv")
data <-read.csv("specdata/001.csv")
str(data)
?summary
summary(data)
data <-read.csv("specdata/101.csv")
getwd()
data <-read.csv("specdata/101.csv")
data
str(data)
summary(data)
data <-read.csv("/Users/Mark/Documents/CourseraR/specdata/101.csv")
data2 <-read.csv("/Users/Mark/Documents/CourseraR/specdata/101.csv")
cc <- c(111, "dsafad", "csv")
cc
cc <- paste(111, "dddd", ".csv'")
?paste?
?
quit
?paste
str(cc)
fileName <- paste(directory, id, ".csv", sep "")
data3 <- read.csv()
getmonitor(101, "/Users/Mark/Documents/CourseraR/specdata/")
getmonitor <- function(id, directory, summarize = FALSE) {
## 'id' is a vector of length 1 indicating the monitor ID
## number.  The user can specify 'id' as either an integer, a
## character or a numeric
## 'directory' is a character vector of lenght 1 indicating
## the location of the CSV files.
## 'summarize' is a logical indicating whether a summary of
## the data should be printed to the console; the default is
## FALSE
fileName <- paste(directory, id, ".csv", sep "")
data3 <- read.csv()
}
getmonitor(101, "/Users/Mark/Documents/CourseraR/specdata/")
getmonitor(101, "/Users/Mark/Documents/CourseraR/specdata/")
setwd("~/Documents/CourseraR")
getmonitor(101, "/Users/Mark/Documents/CourseraR/specdata/")
ls(getmonitor)
?getmonitor
getmonitor("101","dssdd")
getmonitor.testscript()
source("http://spark-public.s3.amazonaws.com/compdata/scripts/getmonitor-test.R")
getmonitor.testscript()
?paste
source("http://spark-public.s3.amazonaws.com/compdata/scripts/getmonitor-test.R")
getmonitor.testscript()
testi <- 1
str(testi)
testi <- 1
str(testi)
length(testi)
testc <- as.character(testi)
str(testc)
length(testc)
zv <- c(0,0,0)
zv[3] <- 1
zv
11
testi <- 34
str(testi)
length(testi)
testc <- as.character(testi)
length(testc)
testc
str(testc)
fff <- testi.toString
fff <- testi.toString()
fff <-toString(testi)
str(fff)
fff <- toString(testi, 3)
fff
source("http://spark-public.s3.amazonaws.com/compdata/scripts/getmonitor-test.R")
getmonitor.testscript()
source("http://spark-public.s3.amazonaws.com/compdata/scripts/getmonitor-test.R")
getmonitor.testscript()
source("http://spark-public.s3.amazonaws.com/compdata/scripts/getmonitor-test.R")
getmonitor.testscript()
if (is.numeric(id)){
quit
dfsa
end
id
end
source("http://spark-public.s3.amazonaws.com/compdata/scripts/getmonitor-test.R")
getmonitor.testscript()
clear
reset
?
>
source("http://spark-public.s3.amazonaws.com/compdata/scripts/getmonitor-test.R")
getmonitor.testscript()
source("http://spark-public.s3.amazonaws.com/compdata/scripts/getmonitor-test.R")
getmonitor.testscript()
getmonitor.testscript()
getmonitor()
source("http://spark-public.s3.amazonaws.com/compdata/scripts/getmonitor-test.R")
getmonitor.testscript()
source("http://spark-public.s3.amazonaws.com/compdata/scripts/getmonitor-test.R")
getmonitor.testscript()
source("http://spark-public.s3.amazonaws.com/compdata/scripts/getmonitor-test.R")
getmonitor.testscript()
source("http://spark-public.s3.amazonaws.com/compdata/scripts/getmonitor-test.R")
getmonitor.testscript()
source(getmonitor.R)
source("getmonitor.R")
getmonitor(1, "specdata")
source("getmonitor.R")
getmonitor(1, "specdata")
source("http://spark-public.s3.amazonaws.com/compdata/scripts/getmonitor-test.R")
debug(getmonitor)
getmonitor.testscript()
source("http://spark-public.s3.amazonaws.com/compdata/scripts/getmonitor-test.R")
##debug(getmonitor)
getmonitor.testscript()
source("http://spark-public.s3.amazonaws.com/compdata/scripts/getmonitor-test.R")
##debug(getmonitor)
getmonitor.testscript()
source("http://spark-public.s3.amazonaws.com/compdata/scripts/getmonitor-test.R")
##debug(getmonitor)
getmonitor.testscript()
source("http://spark-public.s3.amazonaws.com/compdata/scripts/getmonitor-test.R")
##debug(getmonitor)
getmonitor.testscript()
source("getmonitor.R")
source("http://spark-public.s3.amazonaws.com/compdata/scripts/getmonitor-test.R")
##debug(getmonitor)
getmonitor.testscript()
getmonitor(1, "specdata")
source("getmonitor.R")
source("http://spark-public.s3.amazonaws.com/compdata/scripts/getmonitor-test.R")
##debug(getmonitor)
getmonitor.testscript()
debug(getmonitor)
getmonitor(1, "specdata")
source("http://spark-public.s3.amazonaws.com/compdata/scripts/getmonitor-test.R")
##debug(getmonitor)
getmonitor.testscript()
debug(getmonitor.testscript)
getmonitor.testscript()
getmonitor.testscript()
getmonitor.testscript()
debug(getmonitor)
getmonitor.testscript()
getmonitor.testscript()
source(getmonitor.R)
source("getmonitor.R")
getmonitor.testscript()
source("http://spark-public.s3.amazonaws.com/compdata/scripts/getmonitor-test.R")
getmonitor.testscript()
source("getmonitor.R")
df <- getmonitor(200, "specdata", TRUE)
df
df <- getmonitor(200, "specdata")
str(df)
debug("getmonitor")
df <- getmonitor(200, "specdata")
source("getmonitor")
source("getmonitor.R")
debug("getmonitor")
out <- getmonitor(200, "specdata", TRUE)
out
source("getmonitor.R")
out <- getmonitor(200, "specdata", TRUE)
out
?summary
source("http://spark-public.s3.amazonaws.com/compdata/scripts/getmonitor-test.R")
getmonitor.testscript()
source("getmonitor.R")
source("getmonitor.R")
source("getmonitor.R")
source("http://spark-public.s3.amazonaws.com/compdata/scripts/getmonitor-test.R")
getmonitor.testscript()
?print
source("getmonitor.R")
source("http://spark-public.s3.amazonaws.com/compdata/scripts/getmonitor-test.R")
getmonitor.testscript()
source("complete.R")
complete("specdata")
source("complete.R")
complete("specdata")
?complete
source("complete.R")
complete("specdata")
source("complete.R")
complete("specdata")
source("complete.R")
complte("specdata")
complete("specdata")
source("complete.R")
complete("specdata")
source("complete.R")
complete("specdata")
source("complete.R")
complete("specdata")
source("complete.R")
complete("specdata")
source("complete.R")
complete("specdata")
source("complete.R")
source("complete.R")
complete("specdata")
source("complete.R")
complete.R("specdata")
complete("specdata")
ret <- complete("specdata")
source("http://spark-public.s3.amazonaws.com/compdata/scripts/complete-test.R")
complete.testscript()
source("complete.R")
source("complete.R")
source("http://spark-public.s3.amazonaws.com/compdata/scripts/complete-test.R")
complete.testscript()
complete("specdata", 24)
output <- complete("specdata", 24)
output
output <- complete("specdata", 332)
output
str(output)
output <- complete("specdata", 30:25)
output
output <- complete("specdata", 300:332)
output
output <- complete("specdata", c(2, 4, 8, 10, 12))
output
source ("complete.R")
source("http://spark-public.s3.amazonaws.com/compdata/scripts/complete-test.R")
complete.testscript()
complete("specdata", 400)
source("getmonitor.R")
source("complete.R")
source("http://spark-public.s3.amazonaws.com/compdata/scripts/complete-test.R")
complete.testscript()
debug("complete.testscript")
complete.testscript()
complete("specdata", 332:320)
output <- complete("specdata", 332:320)
output
str(output)
source("complete.R")
source("http://spark-public.s3.amazonaws.com/compdata/scripts/complete-test.R")
complete.testscript()
?cor
source("corr.R")
debug("corr")
corr("specdata")
source("corr.R")
corr("specdata")
debug("corr")
corr("specdata")
source("corr.R")
debug("corr")
corr("specdata")
source("getmonitor.R")
corr("specdata")
getmonitor("specdata", 1)
source("corr.R")
corr("specdata")
debug("corr")
corr("specdata")
library(datasets)
data(iris)
?iris
str(iris)
mean(Sepal.length)
mean(iris$Sepal.Length)
?apply
?iris
?apply
data(mtcars)
?mtcars
tapply(mtcars$mpg, mtcars$cyl, mean)
tapply(mtcars$mpg, mtcars$cyl, mean)
hp <- tapply(mtcars$mpg, mtcars$cyl, mean)
dif <- hp[1] - hp[3]
dif
hp <- tapply(mtcars$hp, mtcars$cyl, mean)
dif <- hp[1] - hp[3]
dif
?cor
source("complete.R")
complete("specdata", 5)
debug("complete.R")
debug("complete")
complete("specdata", 5)
source("complete.R")
complete("specdata", 5)
debug("complete")
complete("specdata", 5)
source("complete.R")
complete("specdata", 5)
source("complete.R")
source("complete.R")
debug("complete")
complete("specdata", 5)
source("complete.R")
complete("specdata", 5)
source("complete.")
source("complete.R")
debug("complete")
complete("specdata", 5)
d <- complete("specdata", 5)
d
source("complete.R")
complete("specdata", 5)
d
source("complete.R")
debug("complete")
complete("specdata", 5)
?cor
source("complete.R")
debug("complete")
complete("specdata", 5)
source("complete.R")
source("corr.R")
corr("specdata")
out <- corr("specdata")
out
debug("corr")
corr("specdata")
View(completeData)
corr("specdata")
d <- corr("specdata")
source("corr.R")
source("complete")
source("complete.R")
r <- complete("specdata", 5)
r
r <- complete("specdata")
r
source("complete.R")
r <- complete("specdata")
r
source("complete.R")
r <- complete("specdata")
source("complete.R")
r <- complete("specdata")
r
v <- corr("specdata")
v
source("corr.R")
v <- corr("specdata")
v
debug("corr")
v <- corr("specdata")
source("corr.R")
v2 <- corr("specdata")
v2
debug("corr")
v2 <- corr("specdata")
source("corr.R")
v2 <- corr("specdata")
debug("corr")
v2 <- corr("specdata")
source("corr.R")
v2 <- corr("specdata")
source("corr.R")
v2 <- corr("specdata")
v2
source("http://spark-public.s3.amazonaws.com/compdata/scripts/corr-test.R")
corr.testscript()
data(iris)
?iris
tapply(iris, "species", mean)
?tapply
?iris
iris
d <- tapply(iris[,1], iris[,5], mean)
d
?mtcars
mtcars
tapply(mtcars$hp, mtcars$cyl, mean)
d <- tapply(mtcars$hp, mtcars$cyl, mean)
e <- d[3] - d[1]
e
